'''Задание 16 (1.5 балла): Написать функцию, которая принимает на вход строку и извлекает
 из неё мобильные телефонные номера с помощью регулярных выражений. Функция должна поддерживать
общепринятые варианты написания номера, как со всевозможными разделителями, так и без них
 (обеспечьте поддержку не менее 10 различных случаев). Возвращаемым значением функции является
 список всех найденных в строке номеров, если их не было, нужно вернуть пустой список.'''
import re


def task_16_func(n:str) -> list:
    """
    Функция принимает строку и
    извлекает из неё мобильные телефонные номера с
    помощью регулярных выражений.
    :param n: Принимает строку
    :return: Возвращает список тел. номеров или пустой
    """
    res = re.findall('((?:8|\+7)?[ (-]?\(?9\d{2}\)?[ )-]?\d{3}(?:[ -]?\d{2}){2})', n)
    return res


if __name__ == "__main__":
    result = task_16_func('ewew+79536761226zx rewqrewew +79536761227d hddsfewew \
    +7(953)6761229 rrwe ss 8 953 676 1230 fgfs +7(953)676-12-31 ewew+79536761226zx rewqrewew +79536761227d hddsfewew \
    +7(963)67 65-269 rrwe ss -8 955 676 12 30)rr fgfs s+7(953)773-12-31')
    print('Список номеров', result)
    assert task_16_func('ewew+79536761226zx rewqrewew +79536761227d hddsfewew \
    +7(953)6761229 rrwe ss 8 953 676 1230 fgfs +7(953)676-12-31') == ['+79536761226', '+79536761227', '+7(953)6761229',
                                                                      '8 953 676 1230', '+7(953)676-12-31']
    assert task_16_func('ttija asdfasdi safjas8 lksfj9') == []
